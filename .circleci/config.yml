version: 2.1

orbs:
  cloudrun: circleci/gcp-cloud-run@1.0.2

commands:
  install_rok8s_scripts:
    steps:
      - run:
          name: Install Rok8s-Scripts
          command: |
            mkdir ${HOME}/rok8s-scripts && curl -L https://github.com/FairwindsOps/rok8s-scripts/archive/v11.1.3.tar.gz | \
            tar xz -C ${HOME}/rok8s-scripts && ls ${HOME}/rok8s-scripts
            echo 'export PATH=$PATH:${HOME}/rok8s-scripts/rok8s-scripts-11.1.3/bin' >> ${BASH_ENV}
jobs:
  test_nginx-test:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/nginx-test
    steps:
      - checkout
      - run:
          name: Run Tests
          command: |
            make ci-test
  push_service_image:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/nginx-test
    steps:
      - checkout
      - install_rok8s_scripts
      - run: prepare-gcloud
      - run:
          name: Build Tag and Push nginx-test Docker Image
          command: |
            docker-build -f deploy/build.config
            docker-push -f deploy/build.config
  deploy_service_cloud_run:
    machine:
      image: ubuntu-1604:201903-01
    parameters:
      environment:
        description: "The environment where to deploy the application"
        default: staging
        type: string
      service-account-name:
        description: The service account the app uses for access to GCP resources. It uses a different service account for deployment.
        type: string
        default: staging-deployment-container-i@main-2020.iam.gserviceaccount.com
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/nginx-test:${CIRCLE_SHA1}'
          platform: managed
          region: us-east1
          service-name: nginx-test-<< parameters.environment >>
          unauthenticated: true
          args: --service-account=<< parameters.service-account-name >>

workflows:
  version: 2
  nginx-test:
    jobs:
      - push_service_image:
          filters:
            branches:
              only:
                - develop
      - deploy_service_cloud_run:
          requires:
            - push_service_image